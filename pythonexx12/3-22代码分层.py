# _*_ coding: UTF-8 _*_
# @Time     : 2022/3/22 14:10
# @Author   : Jing wen
# @Site     : http://www.cdtest.cn/
# @File     : 3-22线性编程.py
# @Software : PyCharm
#
''''''
'''
学习要义: 使用PO/POM模式进行分层设计:
    优点:
        1．减少代码的重复性
        2.提高测试用例的可读性,
        3.提高脚本的可维护性
分层设计后的脚本分为 7 层 :
    1. common/base : 保存公共方法
    2. page :       业务流程
    3. data :       保存测试数据
    4. case :       使用unittest框架写的用例和断言
    5. log  :       运行期间的日志文件
    6. report:      运行结束后生成的测试报告
    7. run.py :     程序的主入口,用来批量执行所有的用例     
自动化用例的选型:  (自动化测试什么时候介入?:#在需求评审阶段就需要准备介入,需要前端的代码开发,规范代码书写,方便后期自动化测试 .  2. 编写手工测试用例的时候,可以做自动化测试的用例进行标记,整理起来.3.最后进行对用例进行自动化)
    1. 不是所有的手工用例都需要转化为自动化用例.
    2. 考虑到开发的成本,不要选择流程太复杂的用例,如果有必要,可以拆分为多个用例来实现.
    3.可以选择主体流程做自动化用例.
    4.可以选择重复执行步骤的用例,比如字段验证这一类.
    自动化用例和手工用例的占比: 15~30%不等, 依据项目大小.
自动化用例脚本的编写原则:
    1. 一个脚本是一个完整的场景,(从打开浏览器,操作步骤,关闭浏览器)
    2. 一个脚本只验证一个功能点.    
    3. 尽量做功能的正向逻辑验证(如添加加购物车并登录支付)
    4. 脚本之间不要产生太多关联性,每一个脚本尽量互相独立.
    5. 测试过程中产生的测试数据,测试完成后一定要进行清理.
    
            
'''















